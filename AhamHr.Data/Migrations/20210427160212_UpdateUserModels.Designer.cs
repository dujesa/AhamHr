// <auto-generated />
using System;
using AhamHr.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AhamHr.Data.Migrations
{
    [DbContext(typeof(AhamHrContext))]
    [Migration("20210427160212_UpdateUserModels")]
    partial class UpdateUserModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentType")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Literature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.AvailableTermin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecurringUntil")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("AvailableTermins");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.ProfessorSubject", b =>
                {
                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ProfessorId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ProfessorSubjects");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.StudentAppointment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentId1")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId", "AppointmentId");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("AppointmentId1");

                    b.ToTable("StudentAppointments");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("UserRole");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Admin", b =>
                {
                    b.HasBaseType("AhamHr.Data.Entities.Models.User");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Professor", b =>
                {
                    b.HasBaseType("AhamHr.Data.Entities.Models.User");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<int>("MaxStudentsAppointmentCapacity")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,4)");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Student", b =>
                {
                    b.HasBaseType("AhamHr.Data.Entities.Models.User");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Appointment", b =>
                {
                    b.HasOne("AhamHr.Data.Entities.Models.Professor", "Professor")
                        .WithMany("Appointments")
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.AvailableTermin", b =>
                {
                    b.HasOne("AhamHr.Data.Entities.Models.Professor", "Professor")
                        .WithMany("AvailableTermins")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.ProfessorSubject", b =>
                {
                    b.HasOne("AhamHr.Data.Entities.Models.Professor", "Professor")
                        .WithMany("ProfessorSubjects")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AhamHr.Data.Entities.Models.Subject", "Subject")
                        .WithMany("ProfessorSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.StudentAppointment", b =>
                {
                    b.HasOne("AhamHr.Data.Entities.Models.Student", "Student")
                        .WithMany("StudentAppointments")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AhamHr.Data.Entities.Models.Appointment", "Appointment")
                        .WithMany("StudentAppointments")
                        .HasForeignKey("AppointmentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Appointment", b =>
                {
                    b.Navigation("StudentAppointments");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Subject", b =>
                {
                    b.Navigation("ProfessorSubjects");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Professor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("AvailableTermins");

                    b.Navigation("ProfessorSubjects");
                });

            modelBuilder.Entity("AhamHr.Data.Entities.Models.Student", b =>
                {
                    b.Navigation("StudentAppointments");
                });
#pragma warning restore 612, 618
        }
    }
}
